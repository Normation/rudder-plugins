#!/usr/bin/python
import sys, json, re
# Hack to import rudder lib, remove, some day ...
sys.path.insert(0, "/usr/share/rudder-api-client/")
from rudder import RudderEndPoint, RudderError

def canonify(string):
  string = string.encode("utf-8").decode("iso-8859-1")
  regex = re.compile("[^a-zA-Z0-9_]")
  return regex.sub("_", string)

PLUGIN_NAME="openscap-policies"
PLUGIN_FULLNAME="rudder-plugin-" + PLUGIN_NAME
PLUGIN_PRETTY_NAME="OpenSCAP Policies"
CATEGORY_NAME=canonify(PLUGIN_PRETTY_NAME + " plugin")

with open('/var/rudder/run/api-token') as ftoken:
    TOKEN = ftoken.read()
RUDDER_URL="https://localhost/rudder"
TRACK_FILE_PATH="/var/rudder/packages/" + PLUGIN_FULLNAME + "/" + PLUGIN_NAME + ".json"

endpoint = RudderEndPoint(RUDDER_URL, TOKEN, verify=False)
RED = '\033[91m'
ENDC = '\033[0m'
GREEN = '\033[92m'

def removeTechniques(techniques):
    techniquesEndpoint = RudderEndPoint("https://localhost/ncf", TOKEN, verify=False)
    for iTechnique in techniques:
        try:
            with open("/var/rudder/packages/" + PLUGIN_FULLNAME + "/techniques/" + iTechnique) as f:
                data = json.load(f)["data"]
            techniqueName = data["name"]
            if canonify(techniqueName) in TECHNIQUES:
                delete = techniquesEndpoint.request("DELETE", "/api/techniques/" + canonify(techniqueName) + "?path=/var/rudder/configuration-repository/ncf")
                print(GREEN + "Successfully removed technique %s"%techniqueName + ENDC)
            else:
                print(GREEN + "Could not find technique %s"%techniqueName + ENDC)
        except RudderError as e:
            print(RED + e.message + ENDC)

try:
    with open(TRACK_FILE_PATH) as f:
        data = json.load(f)
except Exception as e:
    print("Could not open %s"%TRACK_FILE_PATH)
    print(e)
    exit(1)

TECHNIQUES = [iTechnique["name"] for iTechnique in endpoint.list_techniques()["techniques"]]

removeTechniques(data["techniques"])

