description: Get the list of all defined datasources
method: GET
url: /api/latest/datasources
response:
  code: 200
  content: >-
    {
      "action" : "getAllDataSources",
      "result" : "success",
      "data" : {
        "datasources" : [
          {
            "id" : "datasource1",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [],
                "params" : [],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "delete"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          }
        ]
      }
    }
---
description: Create given datasource
method: PUT
url: /api/latest/datasources
headers:
  - "Content-Type: application/json"
body: >-
  {
    "id" : "datasource2",
    "name" : "",
    "description" : "",
    "type" : {
      "name" : "HTTP",
      "parameters" : {
        "url" : "",
        "headers" : [
          {
            "name" : "header 1",
            "value" : "value 1"
          },
          {
            "name" : "header 2",
            "value" : "value 2"
          }
        ],
        "params" : [
          {
            "name" : "param 1",
            "value" : "value 1"
          }
        ],
        "path" : "",
        "checkSsl" : false,
        "maxParallelReq" : 10,
        "requestTimeout" : 300,
        "requestMethod" : "GET",
        "requestMode" : {
          "name" : "byNode"
        },
        "onMissing" : {
          "name" : "noChange"
        }
      }
    },
    "runParameters" : {
      "onGeneration" : false,
      "onNewNode" : false,
      "schedule" : {
        "type" : "notscheduled",
        "duration" : 300
      }
    },
    "updateTimeout" : 300,
    "enabled" : false
  }
response:
  code: 200
  content: >-
    {
      "action" : "createDataSource",
      "result" : "success",
      "data" : {
        "datasources" : [
          {
            "id" : "datasource2",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [
                  {
                    "name" : "header 1",
                    "value" : "value 1"
                  },
                  {
                    "name" : "header 2",
                    "value" : "value 2"
                  }
                ],
                "params" : [
                  {
                    "name" : "param 1",
                    "value" : "value 1"
                  }
                ],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "noChange"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          }
        ]
      }
    }
---
description: Create given datasource with query parameters
method: PUT
url: /api/latest/datasources
headers:
  - "Content-Type: application/x-www-form-urlencoded"
params:
  name: ""
  id: "datasource3"
  description: ""
  type: >-
    {
      "name": "HTTP",
      "parameters": {
        "url": "",
        "headers": [],
        "params": [],
        "path": "",
        "checkSsl": false,
        "maxParallelReq": 10,
        "requestTimeout": 300,
        "requestMethod": "GET",
        "requestMode": {
          "name": "byNode"
        }
      }
    }
  runParameters: >-
    {
      "onGeneration": false,
      "onNewNode": false,
      "schedule": {
        "type": "notscheduled",
        "duration": 300
      }
    }
  updateTimeout: "300"
  enabled: "false"
response:
  code: 200
  content: >-
    {
      "action" : "createDataSource",
      "result" : "success",
      "data" : {
        "datasources" : [
          {
            "id" : "datasource3",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [],
                "params" : [],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "delete"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          }
        ]
      }
    }
---
description: Get the new list of data sources
method: GET
url: /api/latest/datasources
response:
  code: 200
  content: >-
    {
      "action" : "getAllDataSources",
      "result" : "success",
      "data" : {
        "datasources" : [
          {
            "id" : "datasource1",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [],
                "params" : [],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "delete"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          },
          {
            "id" : "datasource2",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [
                  {
                    "name" : "header 1",
                    "value" : "value 1"
                  },
                  {
                    "name" : "header 2",
                    "value" : "value 2"
                  }
                ],
                "params" : [
                  {
                    "name" : "param 1",
                    "value" : "value 1"
                  }
                ],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "noChange"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          },
          {
            "id" : "datasource3",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [],
                "params" : [],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "delete"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          }
        ]
      }
    }
---
description: Update information about the given datasource
method: POST
url: /api/latest/datasources/datasource2
headers:
  - "Content-Type: application/json"
body: >-
  {
    "id" : "fakedatasource2",
    "name" : "d2",
    "updateTimeout" : 299,
    "enabled" : true,
    "type" : {
      "name" : "HTTP",
      "parameters" : {
        "url" : "http://new.url.com",
        "headers" : [
          {
            "name" : "header 1",
            "value" : "new value 1"
          },
          {
            "name" : "new header 2",
            "value" : "new value 2"
          }
        ],
        "params" : [
          {
            "name" : "new param 2",
            "value" : "new value 2"
          }
        ],
        "path" : "/new/path",
        "checkSsl" : true,
        "maxParallelReq" : 11,
        "requestTimeout" : 301,
        "requestMethod" : "POST",
        "requestMode" : {
          "name" : "allNodes",
          "path" : "/some/path",
          "attribute" : "someAttribute"
        },
        "onMissing" : {
          "name" : "defaultValue",
          "value" : "toto"
        }
      }
    },
    "description" : "new description",
    "runParameters" : {
      "onGeneration" : true,
      "onNewNode" : true,
      "schedule" : {
        "type" : "scheduled",
        "duration" : 70
      }
    }
  }
response:
  code: 200
  content: >-
    {
      "action" : "updateDataSource",
      "result" : "success",
      "data" : {
        "datasources" : [
          {
            "id" : "datasource2",
            "name" : "d2",
            "description" : "new description",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "http://new.url.com",
                "headers" : [
                  {
                    "name" : "header 1",
                    "value" : "new value 1"
                  },
                  {
                    "name" : "new header 2",
                    "value" : "new value 2"
                  }
                ],
                "params" : [
                  {
                    "name" : "new param 2",
                    "value" : "new value 2"
                  }
                ],
                "path" : "/new/path",
                "checkSsl" : true,
                "maxParallelReq" : 11,
                "requestTimeout" : 301,
                "requestMethod" : "POST",
                "requestMode" : {
                  "name" : "allNodes",
                  "path" : "/some/path",
                  "attribute" : "someAttribute"
                },
                "onMissing" : {
                  "name" : "defaultValue",
                  "value" : "toto"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : true,
              "onNewNode" : true,
              "schedule" : {
                "type" : "scheduled",
                "duration" : 70
              }
            },
            "updateTimeout" : 299,
            "enabled" : true
          }
        ]
      }
    }
---
description: Get updated data source
method: GET
url: /api/latest/datasources
response:
  code: 200
  content: >-
    {
      "action" : "getAllDataSources",
      "result" : "success",
      "data" : {
        "datasources" : [
          {
            "id" : "datasource1",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [],
                "params" : [],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "delete"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          },
          {
            "id" : "datasource2",
            "name" : "d2",
            "description" : "new description",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "http://new.url.com",
                "headers" : [
                  {
                    "name" : "header 1",
                    "value" : "new value 1"
                  },
                  {
                    "name" : "new header 2",
                    "value" : "new value 2"
                  }
                ],
                "params" : [
                  {
                    "name" : "new param 2",
                    "value" : "new value 2"
                  }
                ],
                "path" : "/new/path",
                "checkSsl" : true,
                "maxParallelReq" : 11,
                "requestTimeout" : 301,
                "requestMethod" : "POST",
                "requestMode" : {
                  "name" : "allNodes",
                  "path" : "/some/path",
                  "attribute" : "someAttribute"
                },
                "onMissing" : {
                  "name" : "defaultValue",
                  "value" : "toto"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : true,
              "onNewNode" : true,
              "schedule" : {
                "type" : "scheduled",
                "duration" : 70
              }
            },
            "updateTimeout" : 299,
            "enabled" : true
          },
          {
            "id" : "datasource3",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [],
                "params" : [],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "delete"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          }
        ]
      }
    }
---
description: Delete given datasource
method: DELETE
url: /api/latest/datasources/datasource2
response:
  code: 200
  content: >-
    {
      "action" : "deleteDataSource",
      "result" : "success",
      "data" : {
        "datasources" : [
          {
            "id" : "datasource2",
            "message" : "Data source datasource2 deleted"
          }
        ]
      }
    }
---
description: Get list of all data sources after deletion
method: GET
url: /api/latest/datasources
response:
  code: 200
  content: >-
    {
      "action" : "getAllDataSources",
      "result" : "success",
      "data" : {
        "datasources" : [
          {
            "id" : "datasource1",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [],
                "params" : [],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "delete"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          },
          {
            "id" : "datasource3",
            "name" : "",
            "description" : "",
            "type" : {
              "name" : "HTTP",
              "parameters" : {
                "url" : "",
                "headers" : [],
                "params" : [],
                "path" : "",
                "checkSsl" : false,
                "maxParallelReq" : 10,
                "requestTimeout" : 300,
                "requestMethod" : "GET",
                "requestMode" : {
                  "name" : "byNode"
                },
                "onMissing" : {
                  "name" : "delete"
                }
              }
            },
            "runParameters" : {
              "onGeneration" : false,
              "onNewNode" : false,
              "schedule" : {
                "type" : "notscheduled",
                "duration" : 300
              }
            },
            "updateTimeout" : 300,
            "enabled" : false
          }
        ]
      }
    }
---
description: Reload all datasources for all nodes
method: POST
url: /api/latest/datasources/reload/node
response:
  code: 200
  content: >-
    {
      "action" : "reloadAllDatasourcesAllNodes",
      "result" : "success",
      "data" : "Data for all nodes, for all configured data sources are going to be updated"
    }
---
description: Reload all datasources for the given node
method: POST
url: /api/latest/datasources/reload/node/node1
response:
  code: 200
  content: >-
    {
      "action" : "reloadAllDatasourcesOneNode",
      "result" : "success",
      "data" : "Data for node 'node1', for all configured data sources, is going to be updated"
    }
---
description: Reload this given datasources for all nodes
method: POST
url: /api/latest/datasources/reload/datasource1
response:
  code: 200
  content: >-
    {
      "action" : "reloadOneDatasourceAllNodes",
      "result" : "success",
      "data" : "Data for all nodes, for data source 'datasource1', are going to be updated"
    }
---
description: Reload the given datasource for the given node
method: POST
url: /api/latest/datasources/reload/datasource1/node/node1
response:
  code: 200
  content: >-
    {
      "action" : "reloadOneDatasourceOneNode",
      "result" : "success",
      "data" : "Data for node 'node1', for data source 'datasource1', is going to be updated"
    }
---
description: Clear node property values on all nodes for given datasource
method: POST
url: /api/latest/datasources/clear/datasource1
response:
  code: 200
  content: >-
    {
      "action" : "clearValueOneDatasourceAllNodes",
      "result" : "success",
      "data" : "Data for all nodes, for data source 'datasource1', cleared"
    }
---
description: Clear node property value set by given datasource on given node
method: POST
url: /api/latest/datasources/clear/datasource1/node/node1
response:
  code: 200
  content: >-
    {
      "action" : "clearValueOneDatasourceOneNode",
      "result" : "success",
      "data" : "Data for node 'node1', for data source 'datasource1', cleared"
    }
