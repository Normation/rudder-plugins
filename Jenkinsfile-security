@Library('slack-notification')
import org.gradiant.jenkins.slack.SlackNotifier

// Check vulns in dependencies on repo branches

def notifier = new SlackNotifier()

pipeline {
    environment {
      SLACK_CHANNEL = 'ci-security'
    }
    agent none
    triggers { cron('@daily') }

    stages {
        stage('deps-plugins') {
            //when { not { changeRequest() } }
            agent {
                dockerfile {
                    filename 'ci/dep-check.Dockerfile'
                    additionalBuildArgs "--build-arg USER_ID=${JENKINS_UID}"
                    // and share maven cache
                    args '-v /srv/cache/maven:/home/jenkins/.m2'
                }
            }
            steps {
                script {
                    SCALA_PLUGINS = sh (
                        script: 'make scala-plugins-list',
                        returnStdout: true
                    ).trim().split(' ')
                    SCALA_PLUGINS.each {
                        stage("${it}") {
                            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                                try {
                                    dir("${it}") {
                                        sh script: 'make generate-pom', label: 'generate pom.xml'
                                        sh script: 'mvn -U -DsuppressionFiles=../dependency-check-suppression.xml -DskipProvidedScope=true -DfailBuildOnCVSS=7 -DcveValidForHours=48 org.owasp:dependency-check-maven:aggregate', label: "check plugins dependencies"
                                        sh script: 'mvn -U license:aggregate-third-party-report', label: 'list ${it} dependencies'
                                    }
                                }
                                catch (exc) {
                                    // Mark the build as failure since it's actually an error
                                    currentBuild.result = 'FAILURE'
                                    notifier.notifyResult("scala-team")
                                    throw exc
                                }
                            }
                        }
                    }
                }
            }
            post {
                always {
            		archiveArtifacts artifacts: '*/target/dependency-check-report.html, */target/site/aggregate-third-party-report.html'
                }
                fixed {
                  script {
                        notifier.notifyResult("scala-team")
                    }
                }
            }
        }
    }
}

